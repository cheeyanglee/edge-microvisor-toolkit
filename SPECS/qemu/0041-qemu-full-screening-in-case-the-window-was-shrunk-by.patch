From 2d04ff7d4b240a292c6b45e1de49a08a82ac4751 Mon Sep 17 00:00:00 2001
From: Dongwon Kim <dongwon.kim@intel.com>
Date: Sat, 20 Jul 2024 01:14:50 +0800
Subject: [PATCH] qemu: full-screening in case the window was shrunk by the
 compositor

Re-fullscreen the window if it was shrunk by the compositor after
QEMU is launched.

This is to WA the problem in Ubuntu 24.04

Signed-off-by: Dongwon Kim <dongwon.kim@intel.com>
---
 ui/gtk.c | 52 +++++++++++++++++++++++++++++-----------------------
 1 file changed, 29 insertions(+), 23 deletions(-)

diff --git a/ui/gtk.c b/ui/gtk.c
index 307ec8e332..c76e0c8536 100644
--- a/ui/gtk.c
+++ b/ui/gtk.c
@@ -1617,6 +1617,9 @@ static gboolean gd_tab_window_close(GtkWidget *widget, GdkEvent *event,
     return TRUE;
 }
 
+static void gd_menu_full_screen(GtkMenuItem *item, void *opaque);
+static void gd_vc_full_screen(void *opaque);
+
 static gboolean gd_window_state_event(GtkWidget *widget, GdkEvent *event,
                                       void *opaque)
 {
@@ -1634,6 +1637,19 @@ static gboolean gd_window_state_event(GtkWidget *widget, GdkEvent *event,
         gd_ui_show(vc);
     }
 
+    /* WA to fullscreen window if it's forcefully un-fullscreened by
+     * the compositor */
+    if (!(event->window_state.new_window_state &
+          GDK_WINDOW_STATE_FULLSCREEN)) {
+        if (vc == gd_vc_find_current(vc->s) && vc->s->full_screen) {
+            vc->s->full_screen = false;
+            gtk_menu_item_activate(GTK_MENU_ITEM(vc->s->full_screen_item));
+        } else if (vc->full_screen) {
+            vc->full_screen = false;
+            gd_vc_full_screen(vc);
+        }
+    }
+
     return TRUE;
 }
 
@@ -1654,8 +1670,9 @@ static void gd_vc_full_screen(void *opaque)
 {
     VirtualConsole *vc = opaque;
 
-    if (!vc->window)
+    if (!vc->window) {
         return;
+    }
 
     if (vc->full_screen) {
         gtk_window_unfullscreen(GTK_WINDOW(vc->window));
@@ -1743,7 +1760,6 @@ static void gd_menu_untabify(GtkMenuItem *item, void *opaque)
 static void gd_window_show_on_monitor(GdkDisplay *dpy, VirtualConsole *vc,
                                       gint monitor_num)
 {
-    GtkDisplayState *s = vc->s;
     GdkMonitor *monitor = gdk_display_get_monitor(dpy, monitor_num);
     GdkRectangle geometry;
 
@@ -1761,19 +1777,6 @@ static void gd_window_show_on_monitor(GdkDisplay *dpy, VirtualConsole *vc,
      */
     gtk_window_move(GTK_WINDOW(vc->window), geometry.x, geometry.y);
 
-    if (s->opts->has_full_screen && s->opts->full_screen) {
-        gtk_widget_set_size_request(vc->gfx.drawing_area, -1, -1);
-        gtk_window_fullscreen(GTK_WINDOW(vc->window));
-        vc->full_screen = true;
-    } else if ((s->window == vc->window) && s->full_screen) {
-        gd_menu_show_tabs(GTK_MENU_ITEM(s->show_tabs_item), s);
-        if (gtk_check_menu_item_get_active(
-                    GTK_CHECK_MENU_ITEM(s->show_menubar_item))) {
-            gtk_widget_show(s->menu_bar);
-        }
-        s->full_screen = false;
-    }
-
     vc->monitor = monitor;
     gd_ui_show(vc);
 
@@ -1987,29 +1990,31 @@ static void gd_menu_full_screen(GtkMenuItem *item, void *opaque)
         gtk_window_fullscreen(GTK_WINDOW(s->window));
         for (i = 0; i < s->nb_vcs; i++) {
             vc = &s->vc[i];
-            if (!vc->window) {
+            if (!vc->window || vc->full_screen) {
                 continue;
             }
             if (vc->type == GD_VC_GFX) {
                 gtk_widget_set_size_request(vc->gfx.drawing_area, -1, -1);
             }
             gtk_window_fullscreen(GTK_WINDOW(vc->window));
+            vc->full_screen = true;
 	}
     } else {
         gtk_window_unfullscreen(GTK_WINDOW(s->window));
         for (i = 0; i < s->nb_vcs; i++) {
             vc = &s->vc[i];
-            if (!vc->window) {
+            if (!vc->window || !vc->full_screen) {
                 continue;
             }
             gtk_window_unfullscreen(GTK_WINDOW(vc->window));
+            vc->full_screen = false;
 
-	    if (vc->type == GD_VC_GFX) {
+            if (vc->type == GD_VC_GFX) {
                 vc->gfx.scale_x = 1.0;
                 vc->gfx.scale_y = 1.0;
                 gd_update_windowsize(vc);
             }
-	}
+        }
 
         gd_menu_show_tabs(GTK_MENU_ITEM(s->show_tabs_item), s);
         if (gtk_check_menu_item_get_active(
@@ -3079,10 +3084,6 @@ static void gtk_display_init(DisplayState *ds, DisplayOptions *opts)
                              vc && vc->type == GD_VC_VTE);
 #endif
 
-    if (opts->has_full_screen &&
-        opts->full_screen) {
-        gtk_menu_item_activate(GTK_MENU_ITEM(s->full_screen_item));
-    }
     if (opts->u.gtk.has_grab_on_hover &&
         opts->u.gtk.grab_on_hover) {
         gtk_menu_item_activate(GTK_MENU_ITEM(s->grab_on_hover_item));
@@ -3094,6 +3095,11 @@ static void gtk_display_init(DisplayState *ds, DisplayOptions *opts)
     if (s->opts->u.gtk.has_connectors) {
         gd_connectors_init(window_display, s);
     }
+    if (opts->has_full_screen &&
+        opts->full_screen) {
+        gtk_menu_item_activate(GTK_MENU_ITEM(s->full_screen_item));
+    }
+
 #ifdef CONFIG_GTK_CLIPBOARD
     gd_clipboard_init(s);
 #endif /* CONFIG_GTK_CLIPBOARD */
-- 
2.43.0

