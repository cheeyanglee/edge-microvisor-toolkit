module hd_agent 1.0;

type hd_agent_t;
type hd_agent_exec_t;
type hd_agent_conf_t;

require {
    type bin_t;
    type boot_t;
    type cert_t;
    type container_config_t;
    type debugfs_t;
    type default_context_t;
    type device_t;
    type devlog_t;
    type dmidecode_exec_t;
    type dosfs_t;
    type etc_runtime_t;
    type etc_t;
    type event_device_t;
    type file_context_t;
    type fixed_disk_device_t;
    type fluent_bit_t;
    type framebuf_device_t;
    type fs_t;
    type home_root_t;
    type http_port_t;
    type hwdata_t;
    type ifconfig_exec_t;
    type inbm_conf_rw_t;
    type init_runtime_t;
    type init_t;
    type initrc_runtime_t;
    type initrc_t;
    type ipmi_device_t;
    type kernel_t;
    type kubernetes_config_t;
    type locale_t;
    type loop_control_device_t;
    type lost_found_t;
    type mnt_t;
    type modules_conf_t;
    type modules_dep_t;
    type modules_object_t;
    type mouse_device_t;
    type net_conf_t;
    type otelcol_contrib_t;
    type proc_kcore_t;
    type proc_net_t;
    type proc_t;
    type removable_device_t;
    type scsi_generic_device_t;
    type security_t;
    type selinux_config_t;
    type shadow_t;
    type shell_exec_t;
    type sudo_exec_t;
    type sysctl_dev_t;
    type sysctl_kernel_t;
    type sysctl_t;
    type sysfs_t;
    type syslogd_runtime_t;
    type syslogd_t;
    type system_dbusd_runtime_t;
    type system_dbusd_t;
    type systemd_hwdb_t;
    type systemd_logind_t;
    type systemd_resolved_runtime_t;
    type systemd_sessions_runtime_t;
    type systemd_userdbd_runtime_t;
    type systemd_userdbd_t;
    type tmp_t;
    type tmpfs_t;
    type udev_exec_t;
    type udev_runtime_t;
    type unconfined_t;
    type unlabeled_t;
    type user_home_dir_t;
    type user_runtime_root_t;
    type user_runtime_t;
    type usr_t;
    type var_lib_t;
    type var_log_t;
    type var_run_t;

    class blk_file { getattr ioctl open read };
    class capability { audit_write dac_read_search mknod net_admin setgid setuid sys_admin sys_module sys_resource };
    class chr_file { create getattr ioctl open read unlink write };
    class dbus send_msg;
    class dir { add_name getattr open read remove_name search write };
    class dir { getattr search };
    class fd use;
    class fifo_file { getattr ioctl read write append lock };
    class file { entrypoint execute execute_no_trans getattr setattr ioctl map open read link unlink write relabelto };
    class filesystem { getattr associate };
    class lnk_file { getattr read };
    class netlink_audit_socket { create nlmsg_relay read write };
    class netlink_kobject_uevent_socket { bind create getattr getopt read setopt };
    class netlink_route_socket { bind create getattr nlmsg_read read setopt write };
    class process { getsched getcap setcap setrlimit setsched signal sigchld signull getpgid sigkill };
    class sock_file write;
    class system module_request;
    class tcp_socket { connect create getattr getopt name_connect read setopt write };
    class udp_socket { connect create getattr ioctl read setopt write };
    class unix_dgram_socket { connect create sendto write };
    class unix_stream_socket { connectto getattr read write ioctl };
    class unix_stream_socket connectto;

    attribute daemon;
    attribute domain;
    attribute entry_type;
    attribute exec_type;
    attribute file_type;

    role system_r;
}

# Define the domain and entry point for the selinux_tester service
typeattribute hd_agent_t domain, daemon;
typeattribute hd_agent_exec_t entry_type, exec_type, file_type;

# Type transition rule
type_transition init_t hd_agent_exec_t:process hd_agent_t;

# Role assignment
role system_r types hd_agent_t;

#============= hd_agent_t ==============
allow hd_agent_t bin_t:dir search;
allow hd_agent_t bin_t:file { execute execute_no_trans getattr ioctl map open read };
allow hd_agent_t bin_t:lnk_file { getattr read };
allow hd_agent_t boot_t:dir { getattr search };
allow hd_agent_t cert_t:dir { getattr open read search };
allow hd_agent_t cert_t:file { getattr open read };
allow hd_agent_t cert_t:lnk_file read;
allow hd_agent_t container_config_t:dir getattr;
allow hd_agent_t debugfs_t:dir search;
allow hd_agent_t debugfs_t:file { getattr open read };
allow hd_agent_t default_context_t:dir search;
allow hd_agent_t device_t:blk_file getattr;
allow hd_agent_t device_t:chr_file { create ioctl open read unlink };
allow hd_agent_t device_t:dir { add_name remove_name write };
allow hd_agent_t devlog_t:sock_file write;
allow hd_agent_t dmidecode_exec_t:file { execute execute_no_trans getattr map open read };
allow hd_agent_t dosfs_t:dir getattr;
allow hd_agent_t etc_runtime_t:file { getattr open read };
allow hd_agent_t etc_t:file { getattr ioctl open read };
allow hd_agent_t etc_t:lnk_file read;
allow hd_agent_t event_device_t:chr_file getattr;
allow hd_agent_t file_context_t:dir search;
allow hd_agent_t file_context_t:file { getattr map open read };
allow hd_agent_t fixed_disk_device_t:blk_file { getattr ioctl open read };
allow hd_agent_t fixed_disk_device_t:chr_file { getattr ioctl open read };
allow hd_agent_t framebuf_device_t:chr_file getattr;
allow hd_agent_t hd_agent_conf_t:file { getattr open read write unlink };
allow hd_agent_t hd_agent_exec_t:file { entrypoint execute execute_no_trans getattr ioctl map open read };
allow hd_agent_t home_root_t:dir { getattr search };
allow hd_agent_t http_port_t:tcp_socket name_connect;
allow hd_agent_t hwdata_t:dir search;
allow hd_agent_t hwdata_t:file { getattr open read };
allow hd_agent_t ifconfig_exec_t:file { execute execute_no_trans getattr map open read };
allow hd_agent_t init_runtime_t:dir search;
allow hd_agent_t init_t:dir search;
allow hd_agent_t init_t:fd use;
allow hd_agent_t init_t:fifo_file { getattr read write append ioctl lock };
allow hd_agent_t init_t:file { getattr open read };
allow hd_agent_t init_t:lnk_file read;
allow hd_agent_t init_t:process { sigchld signull getpgid };
allow hd_agent_t init_t:unix_dgram_socket sendto;
allow hd_agent_t init_t:unix_stream_socket { getattr read write ioctl };
allow hd_agent_t initrc_runtime_t:sock_file write;
allow hd_agent_t initrc_t:unix_stream_socket connectto;
allow hd_agent_t ipmi_device_t:chr_file { getattr ioctl open read write };
allow hd_agent_t kernel_t:system module_request;
allow hd_agent_t kernel_t:unix_dgram_socket sendto;
allow hd_agent_t locale_t:dir { getattr open read search };
allow hd_agent_t locale_t:file { getattr map open read };
allow hd_agent_t loop_control_device_t:chr_file getattr;
allow hd_agent_t lost_found_t:dir getattr;
allow hd_agent_t mnt_t:dir getattr;
allow hd_agent_t modules_conf_t:dir { getattr open read search };
allow hd_agent_t modules_conf_t:file { getattr open read };
allow hd_agent_t modules_dep_t:file { getattr map open read };
allow hd_agent_t modules_object_t:dir search;
allow hd_agent_t mouse_device_t:chr_file getattr;
allow hd_agent_t net_conf_t:file { getattr open read };
allow hd_agent_t net_conf_t:file getattr;
allow hd_agent_t otelcol_contrib_t:unix_stream_socket connectto;
allow hd_agent_t proc_kcore_t:file getattr;
allow hd_agent_t proc_net_t:file { open read };
allow hd_agent_t proc_t:dir read;
allow hd_agent_t proc_t:file { getattr open read };
allow hd_agent_t proc_t:filesystem getattr;
allow hd_agent_t scsi_generic_device_t:chr_file { ioctl open read write };
allow hd_agent_t security_t:dir search;
allow hd_agent_t security_t:file { map open read };
allow hd_agent_t security_t:filesystem getattr;
allow hd_agent_t self:capability { audit_write dac_read_search mknod net_admin setgid setuid sys_admin sys_module sys_resource };
allow hd_agent_t self:fifo_file { getattr ioctl read write };
allow hd_agent_t self:netlink_audit_socket { create nlmsg_relay read write };
allow hd_agent_t self:netlink_kobject_uevent_socket { bind create getattr getopt read setopt };
allow hd_agent_t self:netlink_route_socket { bind create getattr nlmsg_read read setopt write };
allow hd_agent_t self:process { getsched getcap setcap setrlimit setsched signal sigkill signull };
allow hd_agent_t self:tcp_socket { connect create getattr getopt read setopt write };
allow hd_agent_t self:udp_socket { connect create getattr ioctl read setopt write };
allow hd_agent_t self:unix_dgram_socket { connect create write };
allow hd_agent_t selinux_config_t:dir search;
allow hd_agent_t selinux_config_t:file { getattr open read };
allow hd_agent_t shadow_t:file { getattr open read };
allow hd_agent_t shell_exec_t:file { execute map open read };
allow hd_agent_t sudo_exec_t:file { execute execute_no_trans getattr map open read };
allow hd_agent_t sysctl_dev_t:dir search;
allow hd_agent_t sysctl_kernel_t:dir search;
allow hd_agent_t sysctl_kernel_t:file { getattr open read };
allow hd_agent_t sysctl_t:dir read;
allow hd_agent_t sysctl_t:file getattr;
allow hd_agent_t sysfs_t:dir read;
allow hd_agent_t sysfs_t:file { getattr open read };
allow hd_agent_t sysfs_t:filesystem getattr;
allow hd_agent_t sysfs_t:lnk_file { getattr read };
allow hd_agent_t syslogd_runtime_t:dir search;
allow hd_agent_t system_dbusd_runtime_t:dir search;
allow hd_agent_t system_dbusd_runtime_t:sock_file write;
allow hd_agent_t system_dbusd_t:dbus send_msg;
allow hd_agent_t system_dbusd_t:unix_stream_socket connectto;
allow hd_agent_t systemd_hwdb_t:file { getattr map open read };
allow hd_agent_t systemd_logind_t:dbus send_msg;
allow hd_agent_t systemd_logind_t:fd use;
allow hd_agent_t systemd_resolved_runtime_t:dir search;
allow hd_agent_t systemd_resolved_runtime_t:file { getattr open read };
allow hd_agent_t systemd_sessions_runtime_t:fifo_file write;
allow hd_agent_t systemd_userdbd_runtime_t:dir search;
allow hd_agent_t systemd_userdbd_runtime_t:sock_file write;
allow hd_agent_t systemd_userdbd_t:unix_stream_socket connectto;
allow hd_agent_t tmp_t:chr_file { create unlink };
allow hd_agent_t tmp_t:dir { add_name getattr remove_name search write };
allow hd_agent_t tmpfs_t:dir search;
allow hd_agent_t udev_exec_t:file { execute execute_no_trans getattr open read };
allow hd_agent_t udev_exec_t:file map;
allow hd_agent_t udev_runtime_t:dir search;
allow hd_agent_t udev_runtime_t:file { getattr open read };
allow hd_agent_t unlabeled_t:dir search;
allow hd_agent_t unlabeled_t:file { getattr open read };
allow hd_agent_t user_home_dir_t:dir { getattr search };
allow hd_agent_t user_runtime_root_t:dir search;
allow hd_agent_t user_runtime_t:dir getattr;
allow hd_agent_t usr_t:file { getattr open read };
allow hd_agent_t var_lib_t:dir { getattr search };
allow hd_agent_t var_log_t:dir search;
allow hd_agent_t var_log_t:file getattr;
allow hd_agent_t var_run_t:chr_file { create unlink };
allow hd_agent_t var_run_t:dir { add_name remove_name write };
allow hd_agent_t var_run_t:sock_file write;

#============= fluent_bit_t ==============
allow fluent_bit_t hd_agent_t:dir { getattr search };
allow fluent_bit_t hd_agent_t:file { open read };

#============= initrc_t ==============
allow initrc_t hd_agent_conf_t:file { getattr open read };

#============= kernel_t ==============
allow kernel_t hd_agent_conf_t:file { getattr setattr read open write link unlink };

#============= syslogd_t ==============
allow syslogd_t hd_agent_t:process signull;

#============= system_dbusd_t ==============
allow system_dbusd_t hd_agent_t:fd use;

#============= systemd_logind_t ==============
allow systemd_logind_t hd_agent_t:dir search;
allow systemd_logind_t hd_agent_t:fd use;
allow systemd_logind_t hd_agent_t:file { getattr ioctl open read };
allow systemd_logind_t hd_agent_t:dbus send_msg;

#============= unconfined_t ==============
# for root to manage files
# for ab-update script to manage files
allow unconfined_t hd_agent_conf_t:file { getattr open read unlink relabelto };
allow hd_agent_conf_t fs_t:filesystem associate;

allow hd_agent_t kubernetes_config_t:dir getattr;
allow hd_agent_t removable_device_t:blk_file { getattr ioctl open read };

#============= inbm_conf_rw_t ==============
allow hd_agent_t inbm_conf_rw_t:file getattr;
